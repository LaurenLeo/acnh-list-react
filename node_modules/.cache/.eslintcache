[{"/Users/laurenleohner/Downloads/animal-list-react/src/index.js":"1","/Users/laurenleohner/Downloads/animal-list-react/src/App.js":"2","/Users/laurenleohner/Downloads/animal-list-react/src/reportWebVitals.js":"3","/Users/laurenleohner/Downloads/animal-list-react/src/AnimalList.js":"4","/Users/laurenleohner/Downloads/animal-list-react/src/Animal.js":"5","/Users/laurenleohner/Downloads/animal-list-react/src/serviceWorker.js":"6","/Users/laurenleohner/Downloads/animal-list-react/src/mockData.js":"7","/Users/laurenleohner/Downloads/animal-list-react/src/constants.js":"8"},{"size":667,"mtime":1616257919000,"results":"9","hashOfConfig":"10"},{"size":410,"mtime":1616258560000,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1616256475000,"results":"12","hashOfConfig":"10"},{"size":2006,"mtime":1616285824000,"results":"13","hashOfConfig":"10"},{"size":1429,"mtime":1616286032000,"results":"14","hashOfConfig":"10"},{"size":5341,"mtime":1616258676000,"results":"15","hashOfConfig":"10"},{"size":4348,"mtime":1616257634000,"results":"16","hashOfConfig":"10"},{"size":90,"mtime":1616285758000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"qa6kpq",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/laurenleohner/Downloads/animal-list-react/src/index.js",[],["36","37"],"/Users/laurenleohner/Downloads/animal-list-react/src/App.js",[],"/Users/laurenleohner/Downloads/animal-list-react/src/reportWebVitals.js",[],"/Users/laurenleohner/Downloads/animal-list-react/src/AnimalList.js",["38"],"import React, { useState } from 'react';\nimport { \n    AppBar, \n    Toolbar, \n    Grid, Card, \n    CardContent, \n    CircularProgress, \n    CardMedia,\n    Typography \n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport mockData from \"./mockData\";\nimport { toFirstCharUppercase } from \"./constants\";\n\nconst useStyles = makeStyles({\n    listContainer: {\n        paddingTop: '20px',\n        paddingLeft: '50px',\n        paddingRight: '50px'\n    },\n    cardMedia: {\n        margin: \"auto\",\n    },\n    cardContent: {\n        textAlign: \"center\",\n    },\n})\n\nconst AnimalList = (props) => {\n    const { history } = props;\n    const classes = useStyles();\n    const [animalData, setAnimalData] = useState(mockData);\n\n    const getAnimalCard = (animalId) => {\n        console.log(animalData[`${animalId}`]);\n        const { id, name } = animalData[`${animalId}`];\n        const sprite = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${\n            animalId\n          }.png`;\n\n        return(\n        <Grid item xs={12} sm={4} key={animalId}>\n            <Card onClick = {() => history.push(`/${animalId}`)}>\n                <CardMedia \n                className={classes.cardMedia}\n                image={sprite}\n                style={{ width: \"130px\", height: \"130px\" }}\n                />\n                <CardContent className={classes.cardContent}>\n                    <Typography>{`${id}. ${toFirstCharUppercase(name)}`}</Typography>\n                </CardContent>\n            </Card>\n        </Grid>\n        );\n    };\n\n    return (\n        <>\n        <AppBar position=\"static\">\n            <Toolbar />\n        </AppBar>\n        {animalData ? (\n        <Grid container spacing={2} className={classes.listContainer}>\n           {Object.keys(animalData).map(animalId =>\n             getAnimalCard(animalId)\n            )}\n        </Grid>\n        ) : (\n            <CircularProgress />\n        )}\n        </>\n    );\n};\n\nexport default AnimalList;","/Users/laurenleohner/Downloads/animal-list-react/src/Animal.js",["39","40","41","42"],"/Users/laurenleohner/Downloads/animal-list-react/src/serviceWorker.js",[],"/Users/laurenleohner/Downloads/animal-list-react/src/mockData.js",["43"],"/Users/laurenleohner/Downloads/animal-list-react/src/constants.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":32,"column":24,"nodeType":"50","messageId":"51","endLine":32,"endColumn":37},{"ruleId":"48","severity":1,"message":"52","line":10,"column":20,"nodeType":"50","messageId":"51","endLine":10,"endColumn":29},{"ruleId":"48","severity":1,"message":"53","line":13,"column":27,"nodeType":"50","messageId":"51","endLine":13,"endColumn":34},{"ruleId":"54","severity":1,"message":"55","line":21,"column":17,"nodeType":"56","endLine":21,"endColumn":44},{"ruleId":"54","severity":1,"message":"55","line":23,"column":14,"nodeType":"56","endLine":23,"endColumn":84},{"ruleId":"57","severity":1,"message":"58","line":1,"column":1,"nodeType":"59","endLine":148,"endColumn":5},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'setAnimalData' is assigned a value but never used.","Identifier","unusedVar","'setAnimal' is assigned a value but never used.","'species' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]