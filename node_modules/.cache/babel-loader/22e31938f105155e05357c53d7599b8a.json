{"ast":null,"code":"var _jsxFileName = \"/Users/laurenleohner/Documents/GitHub/acnh-list-react/src/Animal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Typography, CircularProgress, Button } from \"@material-ui/core\";\nimport { toFirstCharUppercase } from \"./constants\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Animal = props => {\n  _s();\n\n  const {\n    history,\n    match\n  } = props;\n  const {\n    params\n  } = match;\n  const {\n    animalId\n  } = params;\n  const [animal, setAnimal] = useState(undefined);\n  useEffect(() => {\n    axios.get(`https://acnhapi.com/v1a/villagers/${animalId}`).then(function (response) {\n      const {\n        data\n      } = response;\n      setAnimal(data);\n    }).catch(function (error) {\n      setAnimal(false);\n    });\n  }, [animalId]);\n\n  const generateAnimalJSX = () => {\n    const actualName = animal.name[\"name-USen\"];\n    const {\n      name,\n      id,\n      species,\n      personality,\n      birthday,\n      gender\n    } = animal;\n    const fullImageUrl = `https://acnhapi.com/v1/icons/villagers/${id}`;\n    console.log(animal);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h1\",\n        children: toFirstCharUppercase(actualName)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          width: \"300px\",\n          height: \"300px\"\n        },\n        src: fullImageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Gender: \", gender, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Personality: \", personality, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Species: \", species, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Birthday: \", birthday, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [animal === undefined && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 30\n    }, this), animal !== undefined && animal && generateAnimalJSX(), animal === false && /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Animal not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 26\n    }, this), animal !== undefined && /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: () => history.push(\"/\"),\n      children: \"back to animal list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Animal, \"BQx3XnIXHdErAgPGWR4cJ6aqm04=\");\n\n_c = Animal;\nexport default Animal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Animal\");","map":{"version":3,"sources":["/Users/laurenleohner/Documents/GitHub/acnh-list-react/src/Animal.js"],"names":["React","useState","useEffect","Typography","CircularProgress","Button","toFirstCharUppercase","axios","Animal","props","history","match","params","animalId","animal","setAnimal","undefined","get","then","response","data","catch","error","generateAnimalJSX","actualName","name","id","species","personality","birthday","gender","fullImageUrl","console","log","width","height","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,gBAArB,EAAuCC,MAAvC,QAAoD,mBAApD;AACA,SAASC,oBAAT,QAAqC,aAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAqBF,KAA3B;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAaD,KAAnB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAeD,MAArB;AACA,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAACe,SAAD,CAApC;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,KAAK,CACFU,GADH,CACQ,qCAAoCJ,QAAS,EADrD,EAEGK,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACxB,YAAM;AAAEC,QAAAA;AAAF,UAAWD,QAAjB;AACAJ,MAAAA,SAAS,CAACK,IAAD,CAAT;AACD,KALH,EAMGC,KANH,CAMS,UAAUC,KAAV,EAAiB;AACtBP,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KARH;AASD,GAVM,EAUJ,CAACF,QAAD,CAVI,CAAT;;AAaA,QAAMU,iBAAiB,GAAG,MAAM;AAE5B,UAAMC,UAAU,GAAGV,MAAM,CAACW,IAAP,CAAY,WAAZ,CAAnB;AACA,UAAM;AAAEA,MAAAA,IAAF;AAAQC,MAAAA,EAAR;AAAYC,MAAAA,OAAZ;AAAqBC,MAAAA,WAArB;AAAkCC,MAAAA,QAAlC;AAA4CC,MAAAA;AAA5C,QAAuDhB,MAA7D;AACA,UAAMiB,YAAY,GAAI,0CAAyCL,EAAG,EAAlE;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYnB,MAAZ;AACA,wBACI;AAAA,8BACC,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA,kBACGR,oBAAoB,CAACkB,UAAD;AADvB;AAAA;AAAA;AAAA;AAAA,cADD,eAIC;AAAK,QAAA,KAAK,EAAE;AAAEU,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,MAAM,EAAE;AAA1B,SAAZ;AAAiD,QAAA,GAAG,EAAEJ;AAAtD;AAAA;AAAA;AAAA;AAAA,cAJD,eAKC,QAAC,UAAD;AAAA,+BAAqBD,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cALD,eAMC,QAAC,UAAD;AAAA,oCAA0BF,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cAND,eAOC,QAAC,UAAD;AAAA,gCAAsBD,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cAPD,eAQC,QAAC,UAAD;AAAA,iCAAuBE,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,cARD;AAAA,oBADJ;AAYH,GAlBD;;AAmBA,sBAAQ;AAAA,eACPf,MAAM,KAAKE,SAAX,iBAAwB,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YADjB,EAEPF,MAAM,KAAKE,SAAX,IAAwBF,MAAxB,IAAkCS,iBAAiB,EAF5C,EAGPT,MAAM,KAAK,KAAX,iBAAoB,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHb,EAKPA,MAAM,KAAKE,SAAX,iBACG,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,OAAO,EAAE,MAAMN,OAAO,CAAC0B,IAAR,CAAa,GAAb,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANI;AAAA,kBAAR;AAYH,CAlDD;;GAAM5B,M;;KAAAA,M;AAoDN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Typography, CircularProgress, Button} from \"@material-ui/core\";\nimport { toFirstCharUppercase } from \"./constants\";\nimport axios from \"axios\";\n\nconst Animal = (props) => {\n    const { history, match } = props;\n    const { params } = match;\n    const { animalId } = params;\n    const [animal, setAnimal] = useState(undefined);\n\n    useEffect(() => {\n        axios\n          .get(`https://acnhapi.com/v1a/villagers/${animalId}`)\n          .then(function (response) {\n            const { data } = response;\n            setAnimal(data);\n          })\n          .catch(function (error) {\n            setAnimal(false);\n          });\n      }, [animalId]);\n    \n\n    const generateAnimalJSX = () => {\n        \n        const actualName = animal.name[\"name-USen\"];\n        const { name, id, species, personality, birthday, gender } = animal;\n        const fullImageUrl = `https://acnhapi.com/v1/icons/villagers/${id}`;\n        console.log(animal)\n        return (\n            <>\n             <Typography variant=\"h1\">\n               {toFirstCharUppercase(actualName)}\n             </Typography>\n             <img style={{ width: \"300px\", height: \"300px\" }} src={fullImageUrl} />\n             <Typography>Gender: {gender} </Typography>\n             <Typography>Personality: {personality} </Typography>\n             <Typography>Species: {species} </Typography>\n             <Typography>Birthday: {birthday} </Typography>\n            </>\n        )\n    }\n    return (<>\n    {animal === undefined && <CircularProgress />}\n    {animal !== undefined && animal && generateAnimalJSX()}\n    {animal === false && <Typography>Animal not found</Typography>}\n    \n    {animal !== undefined && (\n        <Button variant=\"contained\" onClick={() => history.push(\"/\")}>\n            back to animal list\n        </Button>\n    )}\n    </>\n    );\n};\n\nexport default Animal;"]},"metadata":{},"sourceType":"module"}